# -*- coding: utf-8 -*-
"""December 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q0-dU1J4AGP-MDY5MV9UzVfYQ93IEDhg
"""

tele_dict={2:['a','b','c'],3:['d','e','f'],4:['g','h','i'],5:['j','k','l'],6:['m','n','o'],7:['p','q','r','s'],8:['t','u','v'],9:['w','x','y','z']}

n=int(input())
#Only 2 character combinations are allowed.
digits=[]
digits.append(n//10)
digits.append(n%10)
print(digits)

comb=[]
for i in tele_dict[digits[0]]:
  for j in tele_dict[digits[1]]:
    comb.append(i+j)
print(comb)

#back tracking 
n=int(input())
digits=[]
while(n>0):
  p=n%10
  digits.append(p)
  n=n//10
digits=digits[::-1]

def backtrack_combi(lists,result,depth,current):
  if(depth==len(lists)):
    result.append(current)
    return
  for i in range(len(lists[depth])):
    backtrack_combi(lists,result,depth+1,current+lists[depth][i])

lists=[]
for i in digits:
  lists.append(tele_dict[i])
result=[]
backtrack_combi(lists,result,0,"")
print(result)

